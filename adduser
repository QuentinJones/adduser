#!/bin/sh
# Quentin Jones - qej4373
# Assignment 4 -sh
# CMPS 499


# Change input field separator to preserve whitespace
OLD_IFS="$IFS"
IFS=
echo -n "Enter the name of the roster file: "
read rosterfile
#restore the old separator
IFS="$OLD_IFS"
echo -n "Enter the course name: "
read coursename
echo -n "Enter the course's section number: "
read section
#initial variables for groups and users
userId=1000  groupId=1000
#get the last letter of the section and append it to coursename
coursename="$coursename$(echo $section | tail -c 2)"
loginsh="/bin/sh"
trap '' SIGHUP SIGINT SIGQUIT SIGTERM SIGSTOP SIGTSTP
# Clone the stdout and stdin to use for later restoration
exec 6<&0
exec 5<&1
while read clid lastname firstname middleinit
	do
	name="$firstname $middleinit $lastname"
	dir=$(pwd)
	homedir="$dir/$coursename/$clid"
	echo "$clid::$userId:$groupId:$name:$homedir:$loginsh"
	userId=`expr $userId + 1`
	done < $rosterfile > password
# Close password file
exec 1<&-
#Restore stdinput
exec 1<&5
umask 027
mkdir $coursename
chgrp 1000 $coursename
umask 077
# Read uid and path from password file and create home directories
awk -F : '{print $3, $6}' password | while read uid path
	do
	mkdir -p ${path}
# Create .profile files with the content following	
tee $path/.profile << 123profilecontent321 > /dev/null
if [ "$TERM" = "" ]
then
        if /bin/i386
        then
                TERM=sun-color
        else
                TERM=xterm
        fi
        export TERM
fi
123profilecontent321
	# Set ownership to the appropriate users and permissions
	chown -R $uid:1000 $path
	chmod u+x $path/.profile
	done
#cleanup - Restore things to normal
exec 1<&5 5<&-
exec 0<&6 6<&-
trap SIGHUP SIGINT SIGQUIT SIGTERM SIGSTOP SIGTSTP
