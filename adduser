#!/bin/sh
# Quentin Jones - qej4373
# Assignment 4 -sh
# CMPS 499

#Check that the program is used by grader or self
whosthis=$(id -un)
if [[ ("${whosthis}" != 'crs2411') && ("${whosthis}" != 'salival' ) ]]; then
	echo "You're not authorized to use this program."
	echo "The authorities have been notified."
	exit 5
fi


# Change input field separator to preserve whitespace
OLD_IFS="$IFS"
IFS=
echo -n "Enter the name of the roster file: "
read rosterfile
#restore the old separator
IFS="$OLD_IFS"
# Test if file exists
if [ ! -s "$rosterfile" ] 
then
	echo 'File not found or empty...melting hard disk.'
	exit 1
fi
#make sure file is an ordinary file
if [ ! -f "$rosterfile" ] 
then
	echo 'Error: Choose an orinary file.'
	exit 4
fi
#test if file is readable
if [ ! -r "$rosterfile" ]
then
	echo "$rosterfile couldn't be read. Check permissions"
	exit 2
fi

echo -n "Enter the course name: "
read coursename
echo -n "Enter the course's section number: "
read section
# test if numerical
if echo -n $section | grep -q '^[0-9]+$'; then
	echo "Input error. Section must be a number."
	exit 3
fi

#initialize variables for groups and users
userId=1000  groupId=1000

#get the last letter of the section and append it to coursename
coursename="$coursename$(echo $section | tail -c 2)"
loginsh="/bin/sh"
trap '' SIGHUP SIGINT SIGQUIT SIGTERM SIGSTOP SIGTSTP
# Clone the stdout and stdin to use for later restoration
exec 6<&0
exec 5<&1
while read clid lastname firstname middleinit
	do
	name="$firstname $middleinit $lastname"
	dir=$(pwd)
	homedir="$dir/$coursename/$clid"
	echo "$clid::$userId:$groupId:$name:$homedir:$loginsh"
	userId=`expr $userId + 1`
	done < $rosterfile > password
# Close password file
exec 1<&-
#Restore stdinput
exec 1<&5

mkdir $coursename
# Read uid and path from password file and create home directories
OLD_IFS="$IFS"
IFS=":"
 while read clid pass uid gid name homepath shelldir
	do
	mkdir -p ${homepath}
# Create .profile files with the content following	
	tee $homepath/.profile << 123profilecontent321 > /dev/null
	if [ "$TERM" = "" ]
	then
        	if /bin/i386
        	then
        		TERM=sun-color
        	else
			TERM=xterm
       		fi
       		export TERM
	fi
123profilecontent321
	done < password
#cleanup - Restore things to normal
#IFS="$OLD_IFS"
exec 1<&5 5<&-
exec 0<&6 6<&-
trap SIGHUP SIGINT SIGQUIT SIGTERM SIGSTOP SIGTSTP
